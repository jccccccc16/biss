<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.crowd.mapper.OrderPOMapper">
    <resultMap id="BaseResultMap" type="com.atguigu.crowd.entity.OrderPO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_num" property="orderNum" jdbcType="CHAR"/>
        <result column="pay_order_num" property="payOrderNum" jdbcType="CHAR"/>
        <result column="order_amount" property="orderAmount" jdbcType="DOUBLE"/>
        <result column="invoice" property="invoice" jdbcType="INTEGER"/>
        <result column="invoice_title" property="invoiceTitle" jdbcType="CHAR"/>
        <result column="order_remark" property="orderRemark" jdbcType="CHAR"/>
        <result column="address_id" property="addressId" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" jdbcType="CHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="send_time" property="sendTime" jdbcType="CHAR"/>
        <result column="confirm_time" property="confirmTime" jdbcType="CHAR"/>
        <result column="refund_time" property="refundTime" jdbcType="CHAR"/>
    </resultMap>

<!--    详情-->
    <resultMap id="OrderDetailResultMap" type="com.atguigu.crowd.entity.OrderDetailVO">
        <result column="order_num" property="orderPO.orderNum" jdbcType="CHAR"/>
        <result column="pay_order_num" property="orderPO.payOrderNum" jdbcType="CHAR"/>
        <result column="order_amount" property="orderPO.orderAmount" jdbcType="CHAR"/>
        <result column="invoice" property="orderPO.invoice" jdbcType="INTEGER"/>
        <result column="invoice_title" property="orderPO.invoiceTitle" jdbcType="CHAR"/>
        <result column="order_remark" property="orderPO.orderRemark" jdbcType="CHAR"/>
        <result column="create_time" property="orderPO.createTime" jdbcType="CHAR"/>
        <result column="status" property="orderPO.status" jdbcType="INTEGER"/>
        <result column="confirm_time" property="orderPO.confirmTime" jdbcType="CHAR"/>
        <result column="refund_time" property="orderPO.refundTime" jdbcType="CHAR"/>
        <result column="send_time" property="orderPO.sendTime" jdbcType="CHAR"/>
        <result column="project_name" property="orderProjectPO.projectName" jdbcType="CHAR"/>
        <result column="launch_name" property="orderProjectPO.launchName" jdbcType="CHAR"/>
        <result column="return_content" property="orderProjectPO.returnContent" jdbcType="CHAR"/>
        <result column="return_count" property="orderProjectPO.returnCount" jdbcType="CHAR"/>
        <result column="support_price" property="orderProjectPO.supportPrice" jdbcType="CHAR"/>
        <result column="freight" property="orderProjectPO.freight" jdbcType="CHAR"/>
        <result column="receive_name" property="addressPO.receiveName" jdbcType="CHAR"/>
        <result column="phone_num" property="addressPO.phoneNum" jdbcType="CHAR"/>
        <result column="address" property="addressPO.address" jdbcType="CHAR"/>
        <result column="email" property="email" jdbcType="CHAR"/>
        <result column="loinacct" property="loinAcct" jdbcType="CHAR"/>
        <result column="realname" property="realName" jdbcType="CHAR"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_num, pay_order_num, order_amount, invoice, invoice_title, order_remark, 
    address_id, create_time,status,send_time,confirm_time,refund_time
  </sql>

    <select id="selectOrderDetail" resultMap="OrderDetailResultMap">
        SELECT o.*,op.*,a.receive_name,a.phone_num,a.address,m.loginacct,m.email,m.realname FROM t_order o LEFT JOIN t_order_project op ON o.id = op.order_id
LEFT JOIN t_address a ON a.id = o.address_id LEFT JOIN t_member m ON m.id = a.member_id where o.order_num =  #{orderNum}
    </select>

    <select id="selectOrderList" resultMap="BaseResultMap">select
        <include refid="Base_Column_List"/>
        from t_order where 1 = 1
        <if test="keyword!=null || keyword!=''">and order_num like concat("%",#{keyword},"%")</if>
        <if test="status!=null">and status = #{status}</if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.crowd.entity.OrderPOExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.atguigu.crowd.entity.OrderPOExample">
        delete from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atguigu.crowd.entity.OrderPO">
    insert into t_order (id, order_num, pay_order_num, 
      order_amount, invoice, invoice_title, 
      order_remark, address_id, create_time,send_time,confirm_time,refund_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=CHAR}, #{payOrderNum,jdbcType=CHAR}, 
      #{orderAmount,jdbcType=DOUBLE}, #{invoice,jdbcType=INTEGER}, #{invoiceTitle,jdbcType=CHAR}, 
      #{orderRemark,jdbcType=CHAR}, #{addressId,jdbcType=CHAR}, #{createTime,jdbcType=CHAR},
      #{status,jdbcType=INTEGER}, #{send_time,jdbcType=CHAR},#{confirm_time,jdbcType=CHAR},#{refund_time,jdbcType=CHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.atguigu.crowd.entity.OrderPO">
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="payOrderNum != null">
                pay_order_num,
            </if>
            <if test="orderAmount != null">
                order_amount,
            </if>
            <if test="invoice != null">
                invoice,
            </if>
            <if test="invoiceTitle != null">
                invoice_title,
            </if>
            <if test="orderRemark != null">
                order_remark,
            </if>
            <if test="addressId != null">
                address_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER}
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="confirmTime != null">
                confirm_time,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=CHAR},
            </if>
            <if test="payOrderNum != null">
                #{payOrderNum,jdbcType=CHAR},
            </if>
            <if test="orderAmount != null">
                #{orderAmount,jdbcType=DOUBLE},
            </if>
            <if test="invoice != null">
                #{invoice,jdbcType=INTEGER},
            </if>
            <if test="invoiceTitle != null">
                #{invoiceTitle,jdbcType=CHAR},
            </if>
            <if test="orderRemark != null">
                #{orderRemark,jdbcType=CHAR},
            </if>
            <if test="addressId != null">
                #{addressId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=CHAR},
            </if>
            <if test="=status != null">
                status = #{status,jdbcType=INTEGER}
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=CHAR},
            </if>
            <if test="confirmTime != null">
                #{confirmTime,jdbcType=CHAR},
            </if>
            <if test="refundTime != null">
                #{refundTime,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atguigu.crowd.entity.OrderPOExample" resultType="java.lang.Integer">
        select count(*) from t_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=CHAR},
            </if>
            <if test="record.payOrderNum != null">
                pay_order_num = #{record.payOrderNum,jdbcType=CHAR},
            </if>
            <if test="record.orderAmount != null">
                order_amount = #{record.orderAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.invoice != null">
                invoice = #{record.invoice,jdbcType=INTEGER},
            </if>
            <if test="record.invoiceTitle != null">
                invoice_title = #{record.invoiceTitle,jdbcType=CHAR},
            </if>
            <if test="record.orderRemark != null">
                order_remark = #{record.orderRemark,jdbcType=CHAR},
            </if>
            <if test="record.addressId != null">
                address_id = #{record.addressId,jdbcType=CHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=CHAR},
            </if>
            <if test="record.status != null">
                status = #{status,jdbcType=INTEGER}
            </if>
            <if test="record.sendTime != null">
                send_time = #{record.sendTime,jdbcType=CHAR},
            </if>
            <if test="record.confirmTime != null">
                confirm_time = #{record.confirmTime,jdbcType=CHAR},
            </if>
            <if test="record.refundTime != null">
                refund_time = #{record.refundTime,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_order
        set id = #{record.id,jdbcType=INTEGER},
        order_num = #{record.orderNum,jdbcType=CHAR},
        pay_order_num = #{record.payOrderNum,jdbcType=CHAR},
        order_amount = #{record.orderAmount,jdbcType=DOUBLE},
        invoice = #{record.invoice,jdbcType=INTEGER},
        invoice_title = #{record.invoiceTitle,jdbcType=CHAR},
        order_remark = #{record.orderRemark,jdbcType=CHAR},
        address_id = #{record.addressId,jdbcType=CHAR},
        create_time = #{record.createTime,jdbcType=CHAR},
        status = #{record.status,jdbcType=INTEGER},
        send_time = #{record.sendTime,jdbcType=CHAR},
        confirm_time = #{record.confirmTime,jdbcType=CHAR},
        refund_time = #{record.refundTime,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.crowd.entity.OrderPO">
        update t_order
        <set>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=CHAR},
            </if>
            <if test="payOrderNum != null">
                pay_order_num = #{payOrderNum,jdbcType=CHAR},
            </if>
            <if test="orderAmount != null">
                order_amount = #{orderAmount,jdbcType=DOUBLE},
            </if>
            <if test="invoice != null">
                invoice = #{invoice,jdbcType=INTEGER},
            </if>
            <if test="invoiceTitle != null">
                invoice_title = #{invoiceTitle,jdbcType=CHAR},
            </if>
            <if test="orderRemark != null">
                order_remark = #{orderRemark,jdbcType=CHAR},
            </if>
            <if test="addressId != null">
                address_id = #{addressId,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=CHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime,jdbcType=CHAR},
            </if>
            <if test="confirmTime != null">
                confirm_time = #{confirmTime,jdbcType=CHAR},
            </if>
            <if test="refundTime != null">
                refund_time = #{refundTime,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.atguigu.crowd.entity.OrderPO">
    update t_order
    set order_num = #{orderNum,jdbcType=CHAR},
      pay_order_num = #{payOrderNum,jdbcType=CHAR},
      order_amount = #{orderAmount,jdbcType=DOUBLE},
      invoice = #{invoice,jdbcType=INTEGER},
      invoice_title = #{invoiceTitle,jdbcType=CHAR},
      order_remark = #{orderRemark,jdbcType=CHAR},
      address_id = #{addressId,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=CHAR},
      status = #{status,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=CHAR},
        confirm_time = #{record.confirmTime,jdbcType=CHAR},
        refund_time = #{record.refundTime,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>